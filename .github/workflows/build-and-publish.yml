name: Build and Publish

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main, master ]

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore DotNetMetrics.Console
    
    - name: Build
      run: dotnet build DotNetMetrics.Console --configuration Release --no-restore
    
    - name: Test
      run: dotnet test DotNetMetrics.Console --configuration Release --no-build --verbosity normal
      continue-on-error: true
    
    - name: Pack
      run: dotnet pack DotNetMetrics.Console --configuration Release --no-build --output ./nupkg
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: ./nupkg/*.nupkg

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: nuget-packages
        path: ./nupkg
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Publish to NuGet
      run: dotnet nuget push "./nupkg/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

  build-executables:
    needs: build
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))
    
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            rid: win-x64
            artifact: DotNetMetrics.Console.exe
          - os: ubuntu-latest
            rid: linux-x64
            artifact: DotNetMetrics.Console
          - os: macos-latest
            rid: osx-x64
            artifact: DotNetMetrics.Console
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Publish self-contained
      run: dotnet publish DotNetMetrics.Console -c Release -r ${{ matrix.rid }} --self-contained true -o ./builds/${{ matrix.rid }}
    
    - name: Upload executable artifacts
      uses: actions/upload-artifact@v4
      with:
        name: executable-${{ matrix.rid }}
        path: ./builds/${{ matrix.rid }}/${{ matrix.artifact }}

  release:
    needs: [build, publish, build-executables]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          executable-win-x64/DotNetMetrics.Console.exe
          executable-linux-x64/DotNetMetrics.Console
          executable-osx-x64/DotNetMetrics.Console
          nuget-packages/*.nupkg
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}